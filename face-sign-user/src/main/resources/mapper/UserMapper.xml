<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.face.sign.mapper.UserMapper">

    <!-- 查询用户表结构对应 -->
    <resultMap id="UserResultMap" type="com.face.sign.user.entity.UserEntity">
        <id property="userId" column="user_id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="role" column="role"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="isDeleted" column="is_deleted"/>
    </resultMap>

    <!-- 根据用户名查询用户 -->
    <select id="selectUserByUsername" resultMap="UserResultMap">
        SELECT user_id, username, password, role, created_at, updated_at, is_deleted
        FROM user
        WHERE username = #{username}
          AND is_deleted = 0
    </select>

    <!-- 根据用户ID查询用户 -->
    <select id="selectUserById" resultMap="UserResultMap" parameterType="int">
        SELECT user_id, username, password, role, created_at, updated_at, is_deleted
        FROM user
        WHERE user_id = #{userId}
          AND is_deleted = 0
    </select>

    <!-- 查询所有用户 -->
    <select id="selectAllUsers" resultMap="UserResultMap">
        SELECT user_id, username, password, role, created_at, updated_at, is_deleted
        FROM user
        WHERE is_deleted = 0
    </select>

    <!-- 插入新用户 -->
    <insert id="insertUser" parameterType="com.face.sign.user.entity.UserEntity">
        INSERT INTO user (username, password, role, created_at, updated_at, is_deleted)
        VALUES (#{username}, #{password}, #{role}, NOW(), NOW(), 0)
    </insert>

    <!-- 更新用户信息 -->
    <update id="updateUser" parameterType="com.face.sign.user.entity.UserEntity">
        UPDATE user
        SET username = #{username},
            password = #{password},
            role = #{role},
            updated_at = NOW()
        WHERE user_id = #{userId}
    </update>

    <!-- 删除用户 -->
    <update id="deleteUserById" parameterType="int">
        UPDATE user
        SET is_deleted = 1
        WHERE user_id = #{userId}
    </update>

    <!-- 验证用户名是否已存在 -->
    <select id="checkUsernameExists" resultType="int" parameterType="string">
        SELECT COUNT(*)
        FROM user
        WHERE username = #{username}
          AND is_deleted = 0
    </select>

</mapper>